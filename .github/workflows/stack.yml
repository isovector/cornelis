name: Stack CI

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string

jobs:
  build:
    name: Build
    runs-on: ${{ inputs.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache Stack dirs (Linux/macOS)
        if: runner.os != 'Windows'
        uses: ./.github/template/stack-cache

      # We set `key-always-unique` to "true" for Windows to ensure that Agda, which is build with
      # Stack in the `test-windows` job, is added to cache. This reduces the number of times that
      # Agda needs to be built and therefore significantly decreases average CI runtime on Windows.
      - name: Cache Stack dirs (Windows)
        if: runner.os == 'Windows'
        uses: ./.github/template/stack-cache
        with:
          key-always-unique: "true"

      - name: Build package and tests
        run: |
          stack test --no-run-tests

  test:
    needs: [ build ]

    name: Test
    runs-on: ${{ inputs.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache Stack dirs (Linux/macOS)
        if: runner.os != 'Windows'
        uses: ./.github/template/stack-cache

      # We set `key-always-unique` to "true" for Windows to ensure that Agda, which is build with
      # Stack in the `test-windows` job, is added to cache. This reduces the number of times that
      # Agda needs to be built and therefore significantly decreases average CI runtime on Windows.
      - name: Cache Stack dirs (Windows)
        if: runner.os == 'Windows'
        uses: ./.github/template/stack-cache
        with:
          key-always-unique: "true"

      # We use Nix to install test dependencies on Linux and macOS since it's much faster for Agda,
      # and also reduces how much we need to cache with the `cache` action.
      - name: Install Nix
        if: runner.os != 'Windows'
        uses: cachix/install-nix-action@v26
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Install test dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install neovim
          stack install Agda
          "$env:HOMEPATH\AppData\Roaming\local\bin" >> $env:GITHUB_PATH
          "C:\tools\neovim\nvim-win64\bin" >> $env:GITHUB_PATH

      - name: Create Neovim swap dirs
        shell: bash
        run: |
          if [ $RUNNER_OS == "Windows" ]; then
            mkdir -p ~/AppData/Roaming/local/share/nvim/swap
            mkdir -p ~/AppData/Roaming/local/state/nvim/swap
          else
            mkdir -p ~/.local/share/nvim/swap
            mkdir -p ~/.local/state/nvim/swap
          fi

      # Tests can be flaky so we retry them a few times.
      - name: Run tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          retry_wait_seconds: 1
          shell: bash
          command: |
            if [ $RUNNER_OS = "Windows" ]; then
             stack test
            else
              nix shell -c stack test
            fi
